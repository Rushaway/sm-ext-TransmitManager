name: Build

on: [push, pull_request, workflow_dispatch] 

jobs:
  build:
    name: Build for CSS on Ubuntu
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install AMBuild 2
        run: |
          python -m pip install --upgrade pip
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y gcc-multilib g++-multilib

      - name: Checkout MetaMod
        uses: actions/checkout@v4
        with:
            repository: alliedmodders/metamod-source
            path: metamod-source
            submodules: recursive

      - name: Checkout SourceMod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/sourcemod
          ref: 1.12-dev
          path: sourcemod
          submodules: recursive

      - name: Checkout hl2sdk-css
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: css
          path: hl2sdk-css

      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 99999
          path: extension

      - name: Prepare CSS SDK libraries
        run: |
          # Créer le dossier lib/linux s'il n'existe pas
          mkdir -p hl2sdk-css/lib/linux
          
          # Copier libtier0_srv.so depuis la racine du dépôt
          cp extension/libtier0_srv.so hl2sdk-css/lib/linux/libtier0_srv.so
          
          # Créer une copie pour libvstdlib_srv.so
          cp extension/libtier0_srv.so hl2sdk-css/lib/linux/libvstdlib_srv.so
          
          # Vérifier que les fichiers existent
          ls -la hl2sdk-css/lib/linux/

      - name: Create simple configure.py
        run: |
          cat > extension/configure.py << 'EOF'
          #!/usr/bin/env python
          import sys
          import os

          try:
              from ambuild2 import run
          except ImportError:
              sys.stderr.write('AMBuild 2 is required. Please install it from https://github.com/alliedmodders/ambuild\n')
              sys.exit(1)

          # Simple extensions don't need to modify this file.
          run.PrepareBuild(sourcePath=os.path.dirname(os.path.abspath(__file__)),
                          builder='AMBuildScript',
                          buildPath=os.path.join('build', 'AMBuild'))
          EOF
          chmod +x extension/configure.py

      - name: Modify AMBuildScript
        run: |
          # Supprimer le flag -Werror du fichier AMBuildScript
          sed -i 's/-Werror//g' extension/AMBuildScript
          
          # Ajouter des flags pour ignorer les avertissements problématiques
          sed -i "s/-msse,/-msse, '-Wno-unknown-pragmas', '-Wno-dangling-else',/g" extension/AMBuildScript
          
          # Ajouter des définitions pour résoudre le problème de plateforme
          sed -i "s/'GNUC',/'GNUC', 'PLATFORM_POSIX=1', 'PLATFORM_LINUX=1', 'PLATFORM_WINDOWS=0',/g" extension/AMBuildScript

      - name: Build
        working-directory: extension
        shell: bash
        run: |
          python configure.py
          cd build
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TransmitManager-CSS-Linux
          path: extension/build/package